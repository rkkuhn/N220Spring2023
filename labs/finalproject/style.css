/* Author: Kelly Kuhn */
/* Date: Aug 6, 2023, 7, 2023, 8, 2023 */

/* Final Project: Creating a simple game of Tic-Tac-To from different area
   of research. I used YouTube, and the web. The documentation will be added
   to the algorithm paper.
*/

/* Using the everything selector for before and after. 
   Box-sizing allows us to include the padding in the square total for width
   and height. */
*, *::after, *::before {
    box-sizing: border-box;
  }
  
  /* Creating a variable to use for the cell-size and mark-siz (size of x/0. 
     This cuts down on repeated typing when using over and over below. Us .9
     to make it 90% less than the square */
  :root {
    /* cell is for x and o's */
    --cell-size: 100px;
    /* mark is for calulations */
    --mark-size: calc(var(--cell-size) * .9);
  }
  
  /* Remove the margins and set to 0 */
  body {
    margin: 0;
  }

  /* This is the element that wraps all of out cells */
  .board {
    width: 100vw;
    height: 100vh;
    display: grid;
    justify-content: center;
    /* Use align and justify to center the x/o */
    align-content: center;
    justify-items: center;
    align-items: center;
    /* The grid is now layed out in 3 squares per row and auto sized */
    grid-template-columns: repeat(3, auto);
  }
  
  /* This is the element that calls out the variables for the .cells */
  .cell {
    /* Calling the root size 100 from above */
    width: var(--cell-size);
    height: var(--cell-size);
    background-color: purple;
    border: 2px solid black;
    display: flex;
    justify-content: center;
    align-items: center;
    /* ensures the x and o's are equally placed in the square */
    position: relative;
    /* Turns the cursor into a pointer */
    cursor: pointer;
  }
  
  /* Make this look more like a hand drawn tic-tac-toe board */
  /* Setting up the squares to remove the top boarder */
  .cell:first-child,
  .cell:nth-child(2),
  .cell:nth-child(3) {
    border-top: none;
  }
  
  /* Remove the boarder from the left side */
  .cell:nth-child(3n + 1) {
    border-left: none;
  }
  
  /* Remove the boarder on the right side */
  .cell:nth-child(3n + 3) {
    border-right: none;
  }
  
  /* Remove the boarder on the bottom side */
  .cell:last-child,
  .cell:nth-child(8),
  .cell:nth-child(7) {
    border-bottom: none;
  }
  
  /* Make sure the squares cannot be played again if there is something inside
     that square */
  .cell.x,
  .cell.circle {
    cursor: not-allowed;
  }
  
  /* Using sudo before and after to create the x and o in the color green.
     currently we have two L. One before and one after. */
  .cell.x::before,
  .cell.x::after,
  .cell.circle::before {
    background-color: green;
  }
  
  /* Create the hover statement for which is next x/o. Also, it creates the
     hover statement on empty squares in lightblue */
  .board.x .cell:not(.x):not(.circle):hover::before,
  .board.x .cell:not(.x):not(.circle):hover::after,
  .board.circle .cell:not(.x):not(.circle):hover::before {
    background-color: lightblue;
  }
  
  /* Creating the x */
  .cell.x::before,
  .cell.x::after,
  .board.x .cell:not(.x):not(.circle):hover::before,
  .board.x .cell:not(.x):not(.circle):hover::after {
    content: '';
    /* The absolute will make sure the x is not displayed side by side in the
       document. It is currently set as static and absolute changes that */
    position: absolute;
    width: calc(var(--mark-size) * .15);
    height: var(--mark-size);
  }
  
  /* Rotating the line 45 degrees on the first line */
  .cell.x::before,
  .board.x .cell:not(.x):not(.circle):hover::before {
    transform: rotate(45deg);
  }
  
  /* Rotating the line -45 degrees to make an cross */
  .cell.x::after,
  .board.x .cell:not(.x):not(.circle):hover::after {
    transform: rotate(-45deg);
  }
  
  /* Same steps as above but this time for the circle */
  .cell.circle::before,
  .cell.circle::after,
  .board.circle .cell:not(.x):not(.circle):hover::before,
  .board.circle .cell:not(.x):not(.circle):hover::after {
    content: '';
    position: absolute;
    border-radius: 50%;
  }
  
  /* Same steps as above but this time for the circle, creating the outer
     circle */
  .cell.circle::before,
  .board.circle .cell:not(.x):not(.circle):hover::before {
    width: var(--mark-size);
    height: var(--mark-size);
  }
  
  /* Creating the inner section of the circle to purple so that it appears as
     a true circle, reducing it by 70% */
  .cell.circle::after,
  .board.circle .cell:not(.x):not(.circle):hover::after {
    width: calc(var(--mark-size) * .7);
    height: calc(var(--mark-size) * .7);
    background-color: purple;
  }
  
  /* Starting the winning-message settings */
  .winning-message {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, .7);
    justify-content: center;
    align-items: center;
    color: red;
    font-size: 5rem;
    flex-direction: column;
  }
  
  /* Winning-message button settings */
  .winning-message button {
    font-size: 3rem;
    background-color: white;
    border: 1px solid black;
    padding: .25em .5em;
    cursor: pointer;
  }
  
  /* creating the hover settings */
  .winning-message button:hover {
    background-color: lime;
    color: darkgreen;
    border-color: black;
  }
  
  /* Setting the display to flex - altering the .winning-message to fill 
     the available space */
  .winning-message.show {
    display: flex;
  }